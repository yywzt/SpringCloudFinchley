server:
  port: 18786

spring:
  application:
    name: service-feign
  zipkin:
    base-url: http://localhost:9411
  sleuth:
    sampler:
      probability: 1.0

eureka:
  client:
    service-url:
#      defaultZone: http://root:root@localhost:18761/eureka/
      defaultZone: http://localhost:18761/eureka/

# feign自带断路器，但是默认是关闭的
feign:
  hystrix:
    enabled: true

#  如果hystrix.command.default.execution.timeout.enabled为true,则会有两个执行方法超时的配置,一个就是ribbon的ReadTimeout,一个就是熔断器hystrix的timeoutInMilliseconds, 此时谁的值小谁生效
#  如果hystrix.command.default.execution.timeout.enabled为false,则熔断器不进行超时熔断,而是根据ribbon的ReadTimeout抛出的异常而熔断,也就是取决于ribbon
#  ribbon的ConnectTimeout,配置的是请求服务的超时时间,除非服务找不到,或者网络原因,这个时间才会生效
#  ribbon还有MaxAutoRetries对当前实例的重试次数,MaxAutoRetriesNextServer对切换实例的重试次数, 如果ribbon的ReadTimeout超时,或者ConnectTimeout连接超时,会进行重试操作
#  通常熔断的超时时间需要配置的比ReadTimeout长,ReadTimeout比ConnectTimeout长
ribbon:
  OkToRetryOnAllOperations: false #对所有操作请求都进行重试,默认false
  ReadTimeout: 5000   #负载均衡超时时间，默认值5000
  ConnectTimeout: 2000 #ribbon请求连接的超时时间，默认值2000
  MaxAutoRetries: 0     #对当前实例的重试次数，默认0
  MaxAutoRetriesNextServer: 1 #对切换实例的重试次数，默认1

#支持的属性如下所示，应以<clientName>.ribbon.为前缀：
#NFLoadBalancerClassName：应实施ILoadBalancer
#
#NFLoadBalancerRuleClassName：应实施IRule
#
#NFLoadBalancerPingClassName：应实施IPing
#
#NIWSServerListClassName：应实施ServerList
#
#NIWSServerListFilterClassName应实施ServerListFilter
service-test:
  ribbon:
    # 自定义负载均衡策略
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule

hystrix:
  command:
    default:  #default全局有效，service id指定应用有效
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 6000 #断路器超时时间，默认1000ms